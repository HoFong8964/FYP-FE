{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, TableRow, TableHead, TableBody, TableCell, Chip, Grid } from \"@material-ui/core\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PersonalPage() {\n  _s();\n\n  var _infomation$medicalHi;\n\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:3001/getPatient?patientId=' + localStorage.getItem('id'), requestOptions).then(response => response.json()).then(data => {\n      setInfomation(data.res[0]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"\\u500B\\u4EBA\\u8CC7\\u6599\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u500B\\u4EBA\\u8CC7\\u6599\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u59D3\\u540D :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u8EAB\\u5206\\u8B49\\u865F\\u78BC :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.idNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u6027\\u5225 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.sex == 'Male' ? \"男性\" : \"女性\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u51FA\\u751F\\u65E5\\u671F :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u75C5\\u6B77\\u8A18\\u9304\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: (_infomation$medicalHi = infomation.medicalHistoryList) === null || _infomation$medicalHi === void 0 ? void 0 : _infomation$medicalHi.map(record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                color: \"secondary\",\n                className: classes.text,\n                children: record.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: record.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: infomation.workoutHistoryList.map(history => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"pl-3 fw-normal\",\n              children: history.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: history.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: history.product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: history.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: history.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: history.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PersonalPage, \"gEKGb0ElPTGWQrPJ23PBXtSuckA=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalPage\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js"],"names":["React","useState","useEffect","Table","TableRow","TableHead","TableBody","TableCell","Chip","Grid","useStyles","PageTitle","Widget","Typography","PersonalPage","classes","infomation","setInfomation","requestOptions","method","headers","fetch","localStorage","getItem","then","response","json","data","res","dashedBorder","text","displayName","idNum","sex","dob","medicalHistoryList","map","record","date","description","key","workoutHistoryList","history","name","email","product","price","city"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { \n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Chip,\n  Grid\n } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\n\nexport default function PersonalPage() {\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch('http://localhost:3001/getPatient?patientId='+localStorage.getItem('id'), requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInfomation(data.res[0]);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"個人資料\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"個人資料\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                姓名 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.displayName}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                身分證號碼 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.idNum}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                性別 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.sex == 'Male' ? \"男性\" : \"女性\"}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                出生日期 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.dob}\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"病歷記錄\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              {infomation.medicalHistoryList?.map(record => (\n                <React.Fragment>\n                  <Typography variant=\"h5\" color=\"secondary\" className={classes.text}>\n                    {record.date}\n                  </Typography>\n                  <Typography className={classes.text}>\n                    {record.description}\n                  </Typography>\n                </React.Fragment>\n              ))}\n            </div>\n          </Widget>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} md={6}>\n      <Table className=\"mb-0\">\n      <TableHead>\n        <TableRow>\n          {[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => (\n            <TableCell key={key}>{key}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {infomation.workoutHistoryList.map(history => (\n          <TableRow>\n            <TableCell className=\"pl-3 fw-normal\">{history.name}</TableCell>\n            <TableCell>{history.email}</TableCell>\n            <TableCell>{history.product}</TableCell>\n            <TableCell>{history.price}</TableCell>\n            <TableCell>{history.date}</TableCell>\n            <TableCell>{history.city}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n    </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}