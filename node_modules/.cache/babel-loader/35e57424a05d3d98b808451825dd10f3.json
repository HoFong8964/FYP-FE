{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, CircularProgress, Typography, Button, Tabs, Tab, TextField, Fade } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\"; // styles\n\nimport useStyles from \"./styles\"; // logo\n\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\"; // context\n\nimport { useUserDispatch, loginUser, loginPhyUser } from \"../../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  var classes = useStyles(); // global\n\n  var userDispatch = useUserDispatch(); // local\n\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [phyLoginValue, setPhyLoginValue] = useState(\"\");\n  var [phyPasswordValue, setPhyPasswordValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logotypeContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: classes.logotypeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.logotypeText,\n        children: \"\\u96FB\\u5B50\\u5065\\u5EB7\\u8CC7\\u8A0A\\u7CFB\\u7D71\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTabId,\n          onChange: (e, id) => setActiveTabId(id),\n          indicatorColor: \"primary\",\n          textColor: \"primary\",\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u4E00\\u822C\\u7528\\u6236\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"\\u91AB\\u7642\\u7528\\u6236\",\n            classes: {\n              root: classes.tab\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), activeTabId === 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"\\u4F60\\u8F38\\u5165\\u7684\\u5E33\\u865F\\u6216\\u5BC6\\u78BC\\u4E0D\\u6B63\\u78BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"login\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: loginValue,\n            onChange: e => setLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"\\u5E33\\u865F\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: passwordValue,\n            onChange: e => setPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"\\u5BC6\\u78BC\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formButtons,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26,\n              className: classes.loginLoader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loginValue.length === 0 || passwordValue.length === 0,\n              onClick: () => loginUser(userDispatch, loginValue, passwordValue, props.history, setIsLoading, setError),\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              children: \"\\u767B\\u5165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), activeTabId === 1 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Fade, {\n            in: error,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"secondary\",\n              className: classes.errorMessage,\n              children: \"\\u4F60\\u8F38\\u5165\\u7684\\u5E33\\u865F\\u6216\\u5BC6\\u78BC\\u4E0D\\u6B63\\u78BA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"login\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: phyLoginValue,\n            onChange: e => setPhyLoginValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"\\u5E33\\u865F\",\n            type: \"text\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            InputProps: {\n              classes: {\n                underline: classes.textFieldUnderline,\n                input: classes.textField\n              }\n            },\n            value: phyPasswordValue,\n            onChange: e => setPhyPasswordValue(e.target.value),\n            margin: \"normal\",\n            placeholder: \"\\u5BC6\\u78BC\",\n            type: \"password\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formButtons,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 26,\n              className: classes.loginLoader\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              disabled: loginValue.length === 0 || passwordValue.length === 0,\n              onClick: () => loginPhyUser(userDispatch, phyLoginValue, phyPasswordValue, props.history, setIsLoading, setError),\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              children: \"\\u767B\\u5165\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"cIAnSrDe0wsFCM+FEUyYkqxWksk=\", false, function () {\n  return [useStyles, useUserDispatch];\n});\n\n_c = Login;\nexport default _c2 = withRouter(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js"],"names":["React","useState","Grid","CircularProgress","Typography","Button","Tabs","Tab","TextField","Fade","withRouter","classnames","useStyles","useUserDispatch","loginUser","loginPhyUser","Login","props","classes","userDispatch","isLoading","setIsLoading","error","setError","activeTabId","setActiveTabId","loginValue","setLoginValue","passwordValue","setPasswordValue","phyLoginValue","setPhyLoginValue","phyPasswordValue","setPhyPasswordValue","container","logotypeContainer","logo","logotypeImage","logotypeText","formContainer","form","e","id","root","tab","errorMessage","underline","textFieldUnderline","input","textField","target","value","formButtons","loginLoader","length","history"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser, loginPhyUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [phyLoginValue, setPhyLoginValue] = useState(\"\");\n  var [phyPasswordValue, setPhyPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>電子健康資訊系統</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"一般用戶\" classes={{ root: classes.tab }} />\n            <Tab label=\"醫療用戶\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  你輸入的帳號或密碼不正確\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"login\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"帳號\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"密碼\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    登入\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n            <Fade in={error}>\n              <Typography color=\"secondary\" className={classes.errorMessage}>\n                你輸入的帳號或密碼不正確\n              </Typography>\n            </Fade>\n            <TextField\n              id=\"login\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyLoginValue}\n              onChange={e => setPhyLoginValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"帳號\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyPasswordValue}\n              onChange={e => setPhyPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"密碼\"\n              type=\"password\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n              {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n              ) : (\n                <Button\n                  disabled={\n                    loginValue.length === 0 || passwordValue.length === 0\n                  }\n                  onClick={() =>\n                    loginPhyUser(\n                      userDispatch,\n                      phyLoginValue,\n                      phyPasswordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                    )\n                  }\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  登入\n                </Button>\n              )}\n            </div>\n          </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}