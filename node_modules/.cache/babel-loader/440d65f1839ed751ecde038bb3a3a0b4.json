{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Tabs, Tab, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\"; // components\n\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}));\nexport default function Appointment() {\n  _s();\n\n  const classes = useStyles();\n  const [featureAppointmentList, setFeatureAppointmentList] = useState([]);\n  const [pastAppointmentList, setPastAppointmentList] = useState([]);\n  const [activeTabId, setActiveTabId] = useState(0);\n  var isPhysiotherapists = false;\n\n  if (localStorage.getItem(\"type\") === 'physiotherapists') {\n    isPhysiotherapists = true;\n  }\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    var query = '';\n\n    if (!isPhysiotherapists) {\n      query = '?patientId=' + localStorage.getItem('id');\n    } else {\n      query = '?phyId=' + localStorage.getItem('id');\n    }\n\n    fetch('http://localhost:3001/getFeatureAppointmentList' + query, requestOptions).then(response => response.json()).then(data => {\n      let featureAppointmentList = [];\n      data.res.map(appointment => {\n        featureAppointmentList.push([appointment.appointmentDate, appointment.appointmentTime, appointment.physiotherapistsDetails[0].center, appointment.physiotherapistsDetails[0].displayName, appointment.remarks]);\n      });\n      setFeatureAppointmentList(featureAppointmentList);\n    });\n    fetch('http://localhost:3001/getPastAppointmentList' + query, requestOptions).then(response => response.json()).then(data => {\n      let pastAppointmentList = [];\n      data.res.map(appointment => {\n        pastAppointmentList.push([appointment.appointmentDate, appointment.appointmentTime, appointment.physiotherapistsDetails[0].center, appointment.physiotherapistsDetails[0].displayName, appointment.remarks]);\n      });\n      setPastAppointmentList(pastAppointmentList);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"\\u9810\\u7D04\\u8A18\\u9304\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.iconsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        value: activeTabId,\n        onChange: (e, id) => setActiveTabId(id),\n        className: classes.iconsBar,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: isPhysiotherapists ? \"預約列表\" : \"我的預約\",\n          classes: {\n            root: classes.tab\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"\\u904E\\u53BB\\u9810\\u7D04\",\n          classes: {\n            root: classes.tab\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), activeTabId === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n            data: featureAppointmentList,\n            columns: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"],\n            options: {\n              filterType: \"checkbox\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), activeTabId === 1 && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n            data: pastAppointmentList,\n            columns: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"],\n            options: {\n              filterType: \"checkbox\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Appointment, \"0PVGcWOdVoG1IRsRa9KWky8m4Dc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js"],"names":["React","useState","useEffect","Grid","Tabs","Tab","Paper","makeStyles","MUIDataTable","PageTitle","useStyles","theme","tableOverflow","overflow","Appointment","classes","featureAppointmentList","setFeatureAppointmentList","pastAppointmentList","setPastAppointmentList","activeTabId","setActiveTabId","isPhysiotherapists","localStorage","getItem","requestOptions","method","headers","query","fetch","then","response","json","data","res","map","appointment","push","appointmentDate","appointmentTime","physiotherapistsDetails","center","displayName","remarks","iconsContainer","e","id","iconsBar","root","tab","filterType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\n\nexport default function Appointment() {\n  const classes = useStyles();\n  const [featureAppointmentList, setFeatureAppointmentList] = useState([]);\n  const [pastAppointmentList, setPastAppointmentList] = useState([]);\n  const [activeTabId, setActiveTabId] = useState(0);\n  var isPhysiotherapists = false;\n  if(localStorage.getItem(\"type\") === 'physiotherapists'){\n    isPhysiotherapists = true;\n  }\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    var query = '';\n    if(!isPhysiotherapists){\n      query = '?patientId='+localStorage.getItem('id');\n    }\n    else{\n      query = '?phyId='+localStorage.getItem('id');\n    }\n\n    fetch('http://localhost:3001/getFeatureAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        let featureAppointmentList = [];\n        data.res.map((appointment) => {\n          featureAppointmentList.push([\n            appointment.appointmentDate,\n            appointment.appointmentTime,\n            appointment.physiotherapistsDetails[0].center,\n            appointment.physiotherapistsDetails[0].displayName,\n            appointment.remarks,\n          ]);\n        });\n        setFeatureAppointmentList(featureAppointmentList);\n      });\n\n      fetch('http://localhost:3001/getPastAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        let pastAppointmentList = [];\n        data.res.map((appointment) => {\n          pastAppointmentList.push([\n            appointment.appointmentDate,\n            appointment.appointmentTime,\n            appointment.physiotherapistsDetails[0].center,\n            appointment.physiotherapistsDetails[0].displayName,\n            appointment.remarks,\n          ]);\n        });\n        setPastAppointmentList(pastAppointmentList);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"預約記錄\" />\n      <Paper className={classes.iconsContainer}>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        value={activeTabId}\n        onChange={(e, id) => setActiveTabId(id)}\n        className={classes.iconsBar}\n      >\n        <Tab label={isPhysiotherapists ? \"預約列表\" : \"我的預約\"} classes={{ root: classes.tab }} />\n        <Tab label=\"過去預約\" classes={{ root: classes.tab }} />\n      </Tabs>\n      {activeTabId === 0 && (\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              data={featureAppointmentList}\n              columns={[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"]}\n              options={{\n                filterType: \"checkbox\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n      {activeTabId === 1 && (\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              data={pastAppointmentList}\n              columns={[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"]}\n              options={{\n                filterType: \"checkbox\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n      </Paper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}