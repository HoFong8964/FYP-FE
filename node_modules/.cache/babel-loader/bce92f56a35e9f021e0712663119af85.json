{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/fyp-ehr/src/pages/book/Book.js\";\nimport ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-date-picker\"; // import moment from 'moment';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      date: new Date()\n    };\n\n    this.onChange = date => {\n      let formattedDate = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n      this.setState({\n        date: formattedDate\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.date);\n    let f = new Date(this.state.date);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        format: \"MM-dd-y\",\n        onChange: this.onChange,\n        value: f\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(MyApp, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["/Users/tszhofong/project/fyp-ehr/src/pages/book/Book.js"],"names":["ReactDOM","React","Component","DatePicker","MyApp","state","date","Date","onChange","formattedDate","getMonth","getDate","getFullYear","setState","render","console","log","f","rootElement","document","getElementById"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CACA;;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACNC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADA,KADoB;;AAAA,SAK5BC,QAL4B,GAKhBF,IAAD,IAAU;AACnB,UAAIG,aAAa,GAAI,GACnBH,IAAI,CAACI,QAAL,KAAkB,CACnB,IAAGJ,IAAI,CAACK,OAAL,EAAe,IAAGL,IAAI,CAACM,WAAL,EAAmB,EAFzC;AAGA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAEG;AAAR,OAAd;AACD,KAV2B;AAAA;;AAY5BK,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB;AACA,QAAIW,CAAC,GAAG,IAAIV,IAAJ,CAAS,KAAKF,KAAL,CAAWC,IAApB,CAAR;AACA,wBACE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAC,SAAnB;AAA6B,QAAA,QAAQ,EAAE,KAAKE,QAA5C;AAAsD,QAAA,KAAK,EAAES;AAA7D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApB2B;;AAuB9B,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACc,MAAT,eAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2BI,WAA3B","sourcesContent":["import ReactDOM from \"react-dom\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-date-picker\";\n// import moment from 'moment';\n\nclass MyApp extends Component {\n  state = {\n    date: new Date()\n  };\n\n  onChange = (date) => {\n    let formattedDate = `${\n      date.getMonth() + 1\n    }/${date.getDate()}/${date.getFullYear()}`;\n    this.setState({ date: formattedDate });\n  };\n\n  render() {\n    console.log(this.state.date);\n    let f = new Date(this.state.date);\n    return (\n      <div>\n        <DatePicker format=\"MM-dd-y\" onChange={this.onChange} value={f} />\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<MyApp />, rootElement);\n"]},"metadata":{},"sourceType":"module"}