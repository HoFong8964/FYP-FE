{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Tabs, Tab, Paper, Table, TableRow, TableHead, TableBody, TableCell, TextField } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\"; // components\n\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  },\n  formContainer: {\n    width: \"100%\",\n    height: \"20%\",\n    display: \"block\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\"\n    }\n  }\n}));\nexport default function Appointment() {\n  _s();\n\n  const classes = useStyles();\n  const [allFeatureAppointmentList, setAllFeatureAppointmentList] = useState([]);\n  const [allPastAppointmentList, setAllPastAppointmentList] = useState([]);\n  const [featureAppointmentList, setFeatureAppointmentList] = useState([]);\n  const [pastAppointmentList, setPastAppointmentList] = useState([]);\n  const [activeTabId, setActiveTabId] = useState(0);\n  var isPhysiotherapists = false;\n\n  const requestSearch = searchedVal => {\n    console.log(\"searchedVal: \", searchedVal);\n    let filteredRows = allFeatureAppointmentList.filter(row => {\n      var _row$displayName, _row$center;\n\n      return ((_row$displayName = row.displayName) === null || _row$displayName === void 0 ? void 0 : _row$displayName.toLowerCase().includes(searchedVal.toLowerCase())) || ((_row$center = row.center) === null || _row$center === void 0 ? void 0 : _row$center.toLowerCase().includes(searchedVal.toLowerCase()));\n    });\n    setFeatureAppointmentList(filteredRows);\n  };\n\n  if (localStorage.getItem('type') === 'physiotherapists') {\n    isPhysiotherapists = true;\n  }\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    var query = '';\n\n    if (!isPhysiotherapists) {\n      query = '?patientId=' + localStorage.getItem('id');\n    } else {\n      query = '?phyId=' + localStorage.getItem('id');\n    }\n\n    fetch('http://localhost:3001/getFeatureAppointmentList' + query, requestOptions).then(response => response.json()).then(data => {\n      var _data$res;\n\n      console.log(\"data: \", data);\n      let featureAppointmentList = [];\n      data === null || data === void 0 ? void 0 : (_data$res = data.res) === null || _data$res === void 0 ? void 0 : _data$res.map(appointment => {\n        if (isPhysiotherapists) {\n          featureAppointmentList.push({\n            patirntId: appointment.patientDetails[0].id,\n            appointmentDate: appointment.appointmentDate,\n            appointmentTime: appointment.appointmentTime,\n            idNum: appointment.patientDetails[0].idNum,\n            displayName: appointment.patientDetails[0].displayName,\n            dob: appointment.patientDetails[0].dob,\n            sex: appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n            remarks: appointment.remarks\n          });\n        } else {\n          featureAppointmentList.push({\n            appointmentDate: appointment.appointmentDate,\n            appointmentTime: appointment.appointmentTime,\n            center: appointment.physiotherapistsDetails[0].center,\n            displayName: appointment.physiotherapistsDetails[0].displayName,\n            remarks: appointment.physiotherapistsDetails[0].remarks\n          });\n        }\n      });\n      setAllFeatureAppointmentList(featureAppointmentList);\n      setFeatureAppointmentList(featureAppointmentList);\n    });\n    fetch('http://localhost:3001/getPastAppointmentList' + query, requestOptions).then(response => response.json()).then(data => {\n      var _data$res2;\n\n      let pastAppointmentList = [];\n      data === null || data === void 0 ? void 0 : (_data$res2 = data.res) === null || _data$res2 === void 0 ? void 0 : _data$res2.map(appointment => {\n        if (isPhysiotherapists) {\n          pastAppointmentList.push({\n            patirntId: appointment.patientDetails[0].id,\n            appointmentDate: appointment.appointmentDate,\n            appointmentTime: appointment.appointmentTime,\n            idNum: appointment.patientDetails[0].idNum,\n            displayName: appointment.patientDetails[0].displayName,\n            dob: appointment.patientDetails[0].dob,\n            sex: appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n            remarks: appointment.remarks\n          });\n        } else {\n          pastAppointmentList.push({\n            appointmentDate: appointment.appointmentDate,\n            appointmentTime: appointment.appointmentTime,\n            center: appointment.physiotherapistsDetails[0].center,\n            displayName: appointment.physiotherapistsDetails[0].displayName,\n            remarks: appointment.physiotherapistsDetails[0].remarks\n          });\n        }\n      });\n      setAllPastAppointmentList(pastAppointmentList);\n      setPastAppointmentList(pastAppointmentList);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"\\u9810\\u7D04\\u8A18\\u9304\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-name\",\n            label: \"\\u59D3\\u540D\",\n            onChange: e => {\n              requestSearch(e.target.value);\n            },\n            variant: \"filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.iconsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        value: activeTabId,\n        onChange: (e, id) => setActiveTabId(id),\n        className: classes.iconsBar,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: isPhysiotherapists ? \"預約列表\" : \"我的預約\",\n          classes: {\n            root: classes.tab\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"\\u904E\\u53BB\\u9810\\u7D04\",\n          classes: {\n            root: classes.tab\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), activeTabId === 0 && !isPhysiotherapists && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: featureAppointmentList === null || featureAppointmentList === void 0 ? void 0 : featureAppointmentList.map(featureAppointment => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"pl-3 fw-normal\",\n              children: featureAppointment.appointmentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.appointmentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.center\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), activeTabId === 0 && isPhysiotherapists && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: featureAppointmentList === null || featureAppointmentList === void 0 ? void 0 : featureAppointmentList.map(featureAppointment => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"pl-3 fw-normal\",\n              children: featureAppointment.appointmentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.appointmentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.idNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/#/app/patient/${featureAppointment.id}`,\n                children: featureAppointment.displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.sex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), activeTabId === 1 && !isPhysiotherapists && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pastAppointmentList === null || pastAppointmentList === void 0 ? void 0 : pastAppointmentList.map(featureAppointment => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"pl-3 fw-normal\",\n              children: featureAppointment.appointmentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.appointmentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.center\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), activeTabId === 1 && isPhysiotherapists && /*#__PURE__*/_jsxDEV(Table, {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: pastAppointmentList === null || pastAppointmentList === void 0 ? void 0 : pastAppointmentList.map(featureAppointment => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: \"pl-3 fw-normal\",\n              children: featureAppointment.appointmentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.appointmentTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.idNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/#/app/patient/${featureAppointment.id}`,\n                children: featureAppointment.displayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.sex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: featureAppointment.remarks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Appointment, \"zQ+ZepJhWsawTeLTzg+uKzXgS90=\", false, function () {\n  return [useStyles];\n});\n\n_c = Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js"],"names":["React","useState","useEffect","Grid","Tabs","Tab","Paper","Table","TableRow","TableHead","TableBody","TableCell","TextField","makeStyles","MUIDataTable","PageTitle","useStyles","theme","tableOverflow","overflow","formContainer","width","height","display","flexDirection","justifyContent","alignItems","breakpoints","down","Appointment","classes","allFeatureAppointmentList","setAllFeatureAppointmentList","allPastAppointmentList","setAllPastAppointmentList","featureAppointmentList","setFeatureAppointmentList","pastAppointmentList","setPastAppointmentList","activeTabId","setActiveTabId","isPhysiotherapists","requestSearch","searchedVal","console","log","filteredRows","filter","row","displayName","toLowerCase","includes","center","localStorage","getItem","requestOptions","method","headers","query","fetch","then","response","json","data","res","map","appointment","push","patirntId","patientDetails","id","appointmentDate","appointmentTime","idNum","dob","sex","remarks","physiotherapistsDetails","form","e","target","value","iconsContainer","iconsBar","root","tab","key","featureAppointment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  TextField\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  },\n  formContainer: {\n    width: \"100%\",\n    height: \"20%\",\n    display: \"block\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50%\",\n    },\n  },\n}))\n\nexport default function Appointment() {\n  const classes = useStyles();\n  const [allFeatureAppointmentList, setAllFeatureAppointmentList] = useState([]);\n  const [allPastAppointmentList, setAllPastAppointmentList] = useState([]);\n  const [featureAppointmentList, setFeatureAppointmentList] = useState([]);\n  const [pastAppointmentList, setPastAppointmentList] = useState([]);\n  const [activeTabId, setActiveTabId] = useState(0);\n  var isPhysiotherapists = false;\n  const requestSearch = (searchedVal: string) => {\n    console.log(\"searchedVal: \", searchedVal);\n    let filteredRows = allFeatureAppointmentList.filter((row) => {\n      return (\n        row.displayName?.toLowerCase().includes(searchedVal.toLowerCase()) ||\n        row.center?.toLowerCase().includes(searchedVal.toLowerCase())\n      );\n    });\n    setFeatureAppointmentList(filteredRows);\n  };\n\n  if(localStorage.getItem('type') === 'physiotherapists'){\n    isPhysiotherapists = true;\n  }\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    var query = '';\n    if(!isPhysiotherapists){\n      query = '?patientId='+localStorage.getItem('id');\n    }\n    else{\n      query = '?phyId='+localStorage.getItem('id');\n    }\n\n    fetch('http://localhost:3001/getFeatureAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"data: \", data);\n        let featureAppointmentList = [];\n        data?.res?.map((appointment) => {\n          if(isPhysiotherapists){\n            featureAppointmentList.push({\n              patirntId: appointment.patientDetails[0].id,\n              appointmentDate: appointment.appointmentDate,\n              appointmentTime: appointment.appointmentTime,\n              idNum: appointment.patientDetails[0].idNum,\n              displayName: appointment.patientDetails[0].displayName,\n              dob: appointment.patientDetails[0].dob,\n              sex: appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n              remarks: appointment.remarks,\n            });\n          }\n          else{\n            featureAppointmentList.push({\n              appointmentDate: appointment.appointmentDate,\n              appointmentTime: appointment.appointmentTime,\n              center: appointment.physiotherapistsDetails[0].center,\n              displayName: appointment.physiotherapistsDetails[0].displayName,\n              remarks: appointment.physiotherapistsDetails[0].remarks,\n            });\n          }\n          \n        });\n        setAllFeatureAppointmentList(featureAppointmentList);\n        setFeatureAppointmentList(featureAppointmentList);\n      });\n\n      fetch('http://localhost:3001/getPastAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        let pastAppointmentList = [];\n        data?.res?.map((appointment) => {\n          if(isPhysiotherapists){\n            pastAppointmentList.push({\n              patirntId: appointment.patientDetails[0].id,\n              appointmentDate: appointment.appointmentDate,\n              appointmentTime: appointment.appointmentTime,\n              idNum: appointment.patientDetails[0].idNum,\n              displayName: appointment.patientDetails[0].displayName,\n              dob: appointment.patientDetails[0].dob,\n              sex: appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n              remarks: appointment.remarks,\n            });\n          }\n          else{\n            pastAppointmentList.push({\n              appointmentDate: appointment.appointmentDate,\n              appointmentTime: appointment.appointmentTime,\n              center: appointment.physiotherapistsDetails[0].center,\n              displayName: appointment.physiotherapistsDetails[0].displayName,\n              remarks: appointment.physiotherapistsDetails[0].remarks,\n            });\n          }\n        });\n        setAllPastAppointmentList(pastAppointmentList);\n        setPastAppointmentList(pastAppointmentList);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"預約記錄\" />\n      <div className={classes.formContainer}>\n            <div className={classes.form}>\n              <div>\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"姓名\"\n                  onChange={e => {requestSearch(e.target.value)}}\n                  variant=\"filled\"\n                />\n              </div>\n            </div>\n      </div>\n      <Paper className={classes.iconsContainer}>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        value={activeTabId}\n        onChange={(e, id) => setActiveTabId(id)}\n        className={classes.iconsBar}\n      >\n        <Tab label={isPhysiotherapists ? \"預約列表\" : \"我的預約\"} classes={{ root: classes.tab }} />\n        <Tab label=\"過去預約\" classes={{ root: classes.tab }} />\n      </Tabs>\n      {(activeTabId === 0 && !isPhysiotherapists) && (\n        <Table className=\"mb-0\">\n          <TableHead>\n            <TableRow>\n              {[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => (\n                <TableCell key={key}>{key}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {featureAppointmentList?.map(featureAppointment => (\n              <TableRow>\n                <TableCell className=\"pl-3 fw-normal\">{featureAppointment.appointmentDate}</TableCell>\n                <TableCell>{featureAppointment.appointmentTime}</TableCell>\n                <TableCell>{featureAppointment.center}</TableCell>\n                <TableCell>{featureAppointment.displayName}</TableCell>\n                <TableCell>{featureAppointment.remarks}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {(activeTabId === 0 && isPhysiotherapists) && (\n        <Table className=\"mb-0\">\n          <TableHead>\n            <TableRow>\n              {[\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"].map(key => (\n                <TableCell key={key}>{key}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {featureAppointmentList?.map(featureAppointment => (\n              <TableRow>\n                <TableCell className=\"pl-3 fw-normal\">{featureAppointment.appointmentDate}</TableCell>\n                <TableCell>{featureAppointment.appointmentTime}</TableCell>\n                <TableCell>{featureAppointment.idNum}</TableCell>\n                <TableCell><a href={`/#/app/patient/${featureAppointment.id}`}>{featureAppointment.displayName}</a></TableCell>\n                <TableCell>{featureAppointment.dob}</TableCell>\n                <TableCell>{featureAppointment.sex}</TableCell>\n                <TableCell>{featureAppointment.remarks}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {(activeTabId === 1 && !isPhysiotherapists) && (\n        <Table className=\"mb-0\">\n          <TableHead>\n            <TableRow>\n              {[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => (\n                <TableCell key={key}>{key}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pastAppointmentList?.map(featureAppointment => (\n              <TableRow>\n                <TableCell className=\"pl-3 fw-normal\">{featureAppointment.appointmentDate}</TableCell>\n                <TableCell>{featureAppointment.appointmentTime}</TableCell>\n                <TableCell>{featureAppointment.center}</TableCell>\n                <TableCell>{featureAppointment.displayName}</TableCell>\n                <TableCell>{featureAppointment.remarks}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      {(activeTabId === 1 && isPhysiotherapists) && (\n        <Table className=\"mb-0\">\n          <TableHead>\n            <TableRow>\n              {[\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"].map(key => (\n                <TableCell key={key}>{key}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {pastAppointmentList?.map(featureAppointment => (\n              <TableRow>\n                <TableCell className=\"pl-3 fw-normal\">{featureAppointment.appointmentDate}</TableCell>\n                <TableCell>{featureAppointment.appointmentTime}</TableCell>\n                <TableCell>{featureAppointment.idNum}</TableCell>\n                <TableCell><a href={`/#/app/patient/${featureAppointment.id}`}>{featureAppointment.displayName}</a></TableCell>\n                <TableCell>{featureAppointment.dob}</TableCell>\n                <TableCell>{featureAppointment.sex}</TableCell>\n                <TableCell>{featureAppointment.remarks}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      </Paper>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}