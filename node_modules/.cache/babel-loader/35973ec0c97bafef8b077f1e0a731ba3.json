{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table, TableRow, TableHead, TableBody, TableCell, Chip, Grid } from \"@material-ui/core\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PersonalPage() {\n  _s();\n\n  var _infomation$medicalHi;\n\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n  const [workoutHistoryList, setWorkoutHistoryList] = useState([]);\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:3001/getPatient?patientId=' + localStorage.getItem('id'), requestOptions).then(response => response.json()).then(data => {\n      var _data$res$0$workoutHi;\n\n      setInfomation(data.res[0]);\n      let workoutHistoryList = [];\n      data === null || data === void 0 ? void 0 : (_data$res$0$workoutHi = data.res[0].workoutHistoryList) === null || _data$res$0$workoutHi === void 0 ? void 0 : _data$res$0$workoutHi.map(history => {\n        workoutHistoryList.push([history.type, history.startTime, history.target, history.count, history.targetTimeSpent, history.endTimeSpent]);\n      });\n      setWorkoutHistoryList(featureAppointmentList);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"\\u500B\\u4EBA\\u8CC7\\u6599\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u500B\\u4EBA\\u8CC7\\u6599\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u59D3\\u540D :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u8EAB\\u5206\\u8B49\\u865F\\u78BC :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.idNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u6027\\u5225 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.sex == 'Male' ? \"男性\" : \"女性\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u51FA\\u751F\\u65E5\\u671F :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u75C5\\u6B77\\u8A18\\u9304\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: (_infomation$medicalHi = infomation.medicalHistoryList) === null || _infomation$medicalHi === void 0 ? void 0 : _infomation$medicalHi.map(record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                color: \"secondary\",\n                className: classes.text,\n                children: record.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: record.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u8A13\\u7DF4\\u8A18\\u9304\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: workoutHistoryList.map(history => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"pl-3 fw-normal\",\n                  children: history.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.startTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.target\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.targetTimeSpent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: history.endTimeSpent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PersonalPage, \"iOiAhhpLb63mYTyG6Vyc7WTB9No=\", false, function () {\n  return [useStyles];\n});\n\n_c = PersonalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalPage\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js"],"names":["React","useState","useEffect","Table","TableRow","TableHead","TableBody","TableCell","Chip","Grid","useStyles","PageTitle","Widget","Typography","PersonalPage","classes","infomation","setInfomation","workoutHistoryList","setWorkoutHistoryList","requestOptions","method","headers","fetch","localStorage","getItem","then","response","json","data","res","map","history","push","type","startTime","target","count","targetTimeSpent","endTimeSpent","featureAppointmentList","dashedBorder","text","displayName","idNum","sex","dob","medicalHistoryList","record","date","description","key","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { \n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Chip,\n  Grid\n } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\n\nexport default function PersonalPage() {\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n  const [workoutHistoryList, setWorkoutHistoryList] = useState([]);\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch('http://localhost:3001/getPatient?patientId='+localStorage.getItem('id'), requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInfomation(data.res[0]);\n\n        let workoutHistoryList = [];\n\n        data?.res[0].workoutHistoryList?.map((history) => {\n          workoutHistoryList.push([\n            history.type,\n            history.startTime,\n            history.target,\n            history.count,\n            history.targetTimeSpent,\n            history.endTimeSpent,\n          ]);\n        });\n        setWorkoutHistoryList(featureAppointmentList);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"個人資料\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"個人資料\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                姓名 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.displayName}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                身分證號碼 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.idNum}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                性別 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.sex == 'Male' ? \"男性\" : \"女性\"}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                出生日期 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.dob}\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"病歷記錄\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              {infomation.medicalHistoryList?.map(record => (\n                <React.Fragment>\n                  <Typography variant=\"h5\" color=\"secondary\" className={classes.text}>\n                    {record.date}\n                  </Typography>\n                  <Typography className={classes.text}>\n                    {record.description}\n                  </Typography>\n                </React.Fragment>\n              ))}\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Widget title=\"訓練記錄\" disableWidgetMenu>\n            <Table className=\"mb-0\">\n              <TableHead>\n                <TableRow>\n                  {[\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"].map(key => (\n                    <TableCell key={key}>{key}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {workoutHistoryList.map(history => (\n                  <TableRow>\n                    <TableCell className=\"pl-3 fw-normal\">{history.name}</TableCell>\n                    <TableCell>{history.type}</TableCell>\n                    <TableCell>{history.startTime}</TableCell>\n                    <TableCell>{history.target}</TableCell>\n                    <TableCell>{history.count}</TableCell>\n                    <TableCell>{history.targetTimeSpent}</TableCell>\n                    <TableCell>{history.endTimeSpent}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Widget>\n\n        </Grid>\n      </Grid>\n      \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}