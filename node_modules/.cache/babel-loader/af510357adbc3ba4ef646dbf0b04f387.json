{"ast":null,"code":"var _jsxFileName = \"/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Table, TableRow, TableHead, TableBody, TableCell, Grid } from \"@material-ui/core\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PersonalPage() {\n  _s();\n\n  var _infomation$medicalHi, _infomation$workoutHi;\n\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n  var {\n    patientId\n  } = useParams();\n  useEffect(() => {\n    console.log(\"patientId: \", patientId); // get appointment data\n\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch('http://localhost:3001/getPatient?patientId=' + localStorage.getItem('id'), requestOptions).then(response => response.json()).then(data => {\n      setInfomation(data.res[0]);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"\\u500B\\u4EBA\\u8CC7\\u6599\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u500B\\u4EBA\\u8CC7\\u6599\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u59D3\\u540D :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u8EAB\\u5206\\u8B49\\u865F\\u78BC :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.idNum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u6027\\u5225 :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.sex == 'Male' ? \"男性\" : \"女性\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              className: classes.text,\n              children: \"\\u51FA\\u751F\\u65E5\\u671F :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.text,\n              children: infomation.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u75C5\\u6B77\\u8A18\\u9304\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.dashedBorder,\n            children: (_infomation$medicalHi = infomation.medicalHistoryList) === null || _infomation$medicalHi === void 0 ? void 0 : _infomation$medicalHi.map(record => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                color: \"secondary\",\n                className: classes.text,\n                children: record.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.text,\n                children: record.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          title: \"\\u8A13\\u7DF4\\u8A18\\u9304\",\n          disableWidgetMenu: true,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [\"訓練時間\", \"類型\", \"目標\", \"統計\", \"完成目標時間 (秒)\", \"總訓練時間 (秒)\"].map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: key\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (_infomation$workoutHi = infomation.workoutHistoryList) === null || _infomation$workoutHi === void 0 ? void 0 : _infomation$workoutHi.map(workoutHistory => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"pl-3 fw-normal\",\n                  children: workoutHistory.startTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: workoutHistory.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: workoutHistory.target\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: workoutHistory.count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: workoutHistory.targetTimeSpent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: workoutHistory.endTimeSpent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PersonalPage, \"Eu6yM9PpQ9LXItxf4pUD2Tc57d4=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = PersonalPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PersonalPage\");","map":{"version":3,"sources":["/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js"],"names":["React","useState","useEffect","useParams","Table","TableRow","TableHead","TableBody","TableCell","Grid","useStyles","PageTitle","Widget","Typography","PersonalPage","classes","infomation","setInfomation","patientId","console","log","requestOptions","method","headers","fetch","localStorage","getItem","then","response","json","data","res","dashedBorder","text","displayName","idNum","sex","dob","medicalHistoryList","map","record","date","description","key","workoutHistoryList","workoutHistory","startTime","type","target","count","targetTimeSpent","endTimeSpent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { \n  Table,\n  TableRow,\n  TableHead,\n  TableBody,\n  TableCell,\n  Grid\n } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\n\nexport default function PersonalPage() {\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n  var { patientId } = useParams();\n\n  \n\n  useEffect(() => {\n    console.log(\"patientId: \", patientId);\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch('http://localhost:3001/getPatient?patientId='+localStorage.getItem('id'), requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInfomation(data.res[0]);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"個人資料\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"個人資料\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                姓名 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.displayName}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                身分證號碼 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.idNum}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                性別 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.sex == 'Male' ? \"男性\" : \"女性\"}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                出生日期 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.dob}\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"病歷記錄\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              {infomation.medicalHistoryList?.map(record => (\n                <React.Fragment>\n                  <Typography variant=\"h5\" color=\"secondary\" className={classes.text}>\n                    {record.date}\n                  </Typography>\n                  <Typography className={classes.text}>\n                    {record.description}\n                  </Typography>\n                </React.Fragment>\n              ))}\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Widget title=\"訓練記錄\" disableWidgetMenu>\n            <Table className=\"mb-0\">\n              <TableHead>\n                <TableRow>\n                  {[\"訓練時間\", \"類型\", \"目標\", \"統計\", \"完成目標時間 (秒)\", \"總訓練時間 (秒)\"].map(key => (\n                    <TableCell key={key}>{key}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {infomation.workoutHistoryList?.map(workoutHistory => (\n                  <TableRow>\n                    <TableCell className=\"pl-3 fw-normal\">{workoutHistory.startTime}</TableCell>\n                    <TableCell>{workoutHistory.type}</TableCell>\n                    <TableCell>{workoutHistory.target}</TableCell>\n                    <TableCell>{workoutHistory.count}</TableCell>\n                    <TableCell>{workoutHistory.targetTimeSpent}</TableCell>\n                    <TableCell>{workoutHistory.endTimeSpent}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}