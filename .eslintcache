[{"/Users/tszhofong/project/FYP-FE/src/index.js":"1","/Users/tszhofong/project/FYP-FE/src/serviceWorker.js":"2","/Users/tszhofong/project/FYP-FE/src/context/UserContext.js":"3","/Users/tszhofong/project/FYP-FE/src/context/LayoutContext.js":"4","/Users/tszhofong/project/FYP-FE/src/components/App.js":"5","/Users/tszhofong/project/FYP-FE/src/themes/index.js":"6","/Users/tszhofong/project/FYP-FE/src/components/Layout/Layout.js":"7","/Users/tszhofong/project/FYP-FE/src/pages/error/Error.js":"8","/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js":"9","/Users/tszhofong/project/FYP-FE/src/themes/default.js":"10","/Users/tszhofong/project/FYP-FE/src/pages/charts/Charts.js":"11","/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexHeatmap.js":"12","/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexLineChart.js":"13","/Users/tszhofong/project/FYP-FE/src/components/PageTitle/PageTitle.js":"14","/Users/tszhofong/project/FYP-FE/src/components/Widget/Widget.js":"15","/Users/tszhofong/project/FYP-FE/src/components/Widget/styles.js":"16","/Users/tszhofong/project/FYP-FE/src/components/PageTitle/styles.js":"17","/Users/tszhofong/project/FYP-FE/src/components/Wrappers/Wrappers.js":"18","/Users/tszhofong/project/FYP-FE/src/pages/error/styles.js":"19","/Users/tszhofong/project/FYP-FE/src/pages/login/styles.js":"20","/Users/tszhofong/project/FYP-FE/src/components/Layout/styles.js":"21","/Users/tszhofong/project/FYP-FE/src/pages/maps/Maps.js":"22","/Users/tszhofong/project/FYP-FE/src/pages/tables/Tables.js":"23","/Users/tszhofong/project/FYP-FE/src/pages/notifications/Notifications.js":"24","/Users/tszhofong/project/FYP-FE/src/pages/typography/Typography.js":"25","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/Dashboard.js":"26","/Users/tszhofong/project/FYP-FE/src/pages/book/Book.js":"27","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/Sidebar.js":"28","/Users/tszhofong/project/FYP-FE/src/components/Header/Header.js":"29","/Users/tszhofong/project/FYP-FE/src/pages/icons/Icons.js":"30","/Users/tszhofong/project/FYP-FE/src/pages/book/styles.js":"31","/Users/tszhofong/project/FYP-FE/src/components/Header/styles.js":"32","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/styles.js":"33","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/Dot.js":"34","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"35","/Users/tszhofong/project/FYP-FE/src/components/Notification/Notification.js":"36","/Users/tszhofong/project/FYP-FE/src/pages/icons/styles.js":"37","/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/UserAvatar.js":"38","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/mock.js":"39","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/styles.js":"40","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/BigStat.js":"41","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/Table/Table.js":"42","/Users/tszhofong/project/FYP-FE/src/pages/typography/styles.js":"43","/Users/tszhofong/project/FYP-FE/src/pages/notifications/styles.js":"44","/Users/tszhofong/project/FYP-FE/src/pages/maps/styles.js":"45","/Users/tszhofong/project/FYP-FE/src/components/Notification/styles.js":"46","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/styles.js":"47","/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/styles.js":"48","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/styles.js":"49","/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js":"50"},{"size":869,"mtime":1650702581523,"results":"51","hashOfConfig":"52"},{"size":4948,"mtime":1650646315244,"results":"53","hashOfConfig":"52"},{"size":3572,"mtime":1651072139625,"results":"54","hashOfConfig":"52"},{"size":1392,"mtime":1650646315240,"results":"55","hashOfConfig":"52"},{"size":1711,"mtime":1650646315238,"results":"56","hashOfConfig":"52"},{"size":502,"mtime":1650646315244,"results":"57","hashOfConfig":"52"},{"size":2281,"mtime":1651072147774,"results":"58","hashOfConfig":"52"},{"size":1571,"mtime":1650646315242,"results":"59","hashOfConfig":"52"},{"size":6192,"mtime":1650784559054,"results":"60","hashOfConfig":"52"},{"size":2987,"mtime":1650646315244,"results":"61","hashOfConfig":"52"},{"size":5556,"mtime":1650646315241,"results":"62","hashOfConfig":"52"},{"size":1794,"mtime":1650646315241,"results":"63","hashOfConfig":"52"},{"size":1328,"mtime":1650646315241,"results":"64","hashOfConfig":"52"},{"size":427,"mtime":1650646315239,"results":"65","hashOfConfig":"52"},{"size":2485,"mtime":1650646315240,"results":"66","hashOfConfig":"52"},{"size":969,"mtime":1650646315240,"results":"67","hashOfConfig":"52"},{"size":462,"mtime":1650646315239,"results":"68","hashOfConfig":"52"},{"size":3790,"mtime":1650646315240,"results":"69","hashOfConfig":"52"},{"size":1334,"mtime":1650646315242,"results":"70","hashOfConfig":"52"},{"size":3133,"mtime":1650646315243,"results":"71","hashOfConfig":"52"},{"size":680,"mtime":1650646315239,"results":"72","hashOfConfig":"52"},{"size":971,"mtime":1650646315243,"results":"73","hashOfConfig":"52"},{"size":2082,"mtime":1650646315243,"results":"74","hashOfConfig":"52"},{"size":13470,"mtime":1650646315243,"results":"75","hashOfConfig":"52"},{"size":4506,"mtime":1650646315243,"results":"76","hashOfConfig":"52"},{"size":10929,"mtime":1650647830927,"results":"77","hashOfConfig":"52"},{"size":7514,"mtime":1651072139625,"results":"78","hashOfConfig":"52"},{"size":4588,"mtime":1651157460392,"results":"79","hashOfConfig":"52"},{"size":9760,"mtime":1650779019051,"results":"80","hashOfConfig":"52"},{"size":377833,"mtime":1650646315242,"results":"81","hashOfConfig":"52"},{"size":374,"mtime":1650794627604,"results":"82","hashOfConfig":"52"},{"size":3868,"mtime":1650646315239,"results":"83","hashOfConfig":"52"},{"size":1304,"mtime":1650646315240,"results":"84","hashOfConfig":"52"},{"size":862,"mtime":1650646315240,"results":"85","hashOfConfig":"52"},{"size":4411,"mtime":1650646315240,"results":"86","hashOfConfig":"52"},{"size":3296,"mtime":1650646315239,"results":"87","hashOfConfig":"52"},{"size":780,"mtime":1650646315242,"results":"88","hashOfConfig":"52"},{"size":593,"mtime":1650646315240,"results":"89","hashOfConfig":"52"},{"size":4105,"mtime":1650646315241,"results":"90","hashOfConfig":"52"},{"size":2870,"mtime":1650646315241,"results":"91","hashOfConfig":"52"},{"size":4039,"mtime":1650646315241,"results":"92","hashOfConfig":"52"},{"size":1274,"mtime":1650646315241,"results":"93","hashOfConfig":"52"},{"size":374,"mtime":1650646315244,"results":"94","hashOfConfig":"52"},{"size":1858,"mtime":1650646315243,"results":"95","hashOfConfig":"52"},{"size":171,"mtime":1650646315243,"results":"96","hashOfConfig":"52"},{"size":993,"mtime":1650646315239,"results":"97","hashOfConfig":"52"},{"size":1412,"mtime":1650646315240,"results":"98","hashOfConfig":"52"},{"size":276,"mtime":1650646315240,"results":"99","hashOfConfig":"52"},{"size":1027,"mtime":1650646315241,"results":"100","hashOfConfig":"52"},{"size":1751,"mtime":1651157207674,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"3zwx7j",{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tszhofong/project/FYP-FE/src/index.js",[],["206","207"],"/Users/tszhofong/project/FYP-FE/src/serviceWorker.js",[],"/Users/tszhofong/project/FYP-FE/src/context/UserContext.js",[],"/Users/tszhofong/project/FYP-FE/src/context/LayoutContext.js",[],"/Users/tszhofong/project/FYP-FE/src/components/App.js",[],"/Users/tszhofong/project/FYP-FE/src/themes/index.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Layout/Layout.js",["208","209","210","211","212","213","214"],"/Users/tszhofong/project/FYP-FE/src/pages/error/Error.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js",["215","216"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser, loginPhyUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\n  var [passwordValue, setPasswordValue] = useState(\"password\");\n  var [phyLoginValue, setPhyLoginValue] = useState(\"phy@flatlogic.com\");\n  var [phyPasswordValue, setPhyPasswordValue] = useState(\"password\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>電子健康資訊系統</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"一般用戶\" classes={{ root: classes.tab }} />\n            <Tab label=\"醫療用戶\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  你輸入的帳號或密碼不正確\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"login\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"帳號\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"密碼\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    登入\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n            <Fade in={error}>\n              <Typography color=\"secondary\" className={classes.errorMessage}>\n                你輸入的帳號或密碼不正確\n              </Typography>\n            </Fade>\n            <TextField\n              id=\"login\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyLoginValue}\n              onChange={e => setPhyLoginValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"帳號\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyPasswordValue}\n              onChange={e => setPhyPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"密碼\"\n              type=\"password\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n              {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n              ) : (\n                <Button\n                  disabled={\n                    loginValue.length === 0 || passwordValue.length === 0\n                  }\n                  onClick={() =>\n                    loginPhyUser(\n                      userDispatch,\n                      phyLoginValue,\n                      phyPasswordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                    )\n                  }\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  登入\n                </Button>\n              )}\n            </div>\n          </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/Users/tszhofong/project/FYP-FE/src/themes/default.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/Charts.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexHeatmap.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexLineChart.js",[],"/Users/tszhofong/project/FYP-FE/src/components/PageTitle/PageTitle.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Widget/Widget.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Widget/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/PageTitle/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Wrappers/Wrappers.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/error/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/login/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Layout/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/maps/Maps.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/tables/Tables.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/notifications/Notifications.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/typography/Typography.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/Dashboard.js",["217","218","219","220","221"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>} />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12, 678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/book/Book.js",["222","223","224","225","226","227","228","229","230"],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/Sidebar.js",["231","232"],"/Users/tszhofong/project/FYP-FE/src/components/Header/Header.js",["233","234","235"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst account = localStorage.getItem(\"account\");\nconst displayName = localStorage.getItem(\"displayName\");\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n        電子健康資訊系統\n        </Typography>\n        <div className={classes.grow} /><div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {displayName}\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/icons/Icons.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/book/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Header/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/Dot.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Notification/Notification.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/icons/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/UserAvatar.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/mock.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/Table/Table.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/typography/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/notifications/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/maps/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Notification/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js",["236","237","238"],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":9,"column":9,"nodeType":"245","messageId":"246","endLine":9,"endColumn":12},{"ruleId":"243","severity":1,"message":"247","line":9,"column":14,"nodeType":"245","messageId":"246","endLine":9,"endColumn":24},{"ruleId":"243","severity":1,"message":"248","line":9,"column":26,"nodeType":"245","messageId":"246","endLine":9,"endColumn":30},{"ruleId":"243","severity":1,"message":"249","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":12},{"ruleId":"243","severity":1,"message":"250","line":14,"column":18,"nodeType":"245","messageId":"246","endLine":14,"endColumn":30},{"ruleId":"243","severity":1,"message":"251","line":15,"column":17,"nodeType":"245","messageId":"246","endLine":15,"endColumn":28},{"ruleId":"243","severity":1,"message":"252","line":16,"column":16,"nodeType":"245","messageId":"246","endLine":16,"endColumn":26},{"ruleId":"243","severity":1,"message":"253","line":13,"column":8,"nodeType":"245","messageId":"246","endLine":13,"endColumn":18},{"ruleId":"243","severity":1,"message":"254","line":20,"column":8,"nodeType":"245","messageId":"246","endLine":20,"endColumn":14},{"ruleId":"243","severity":1,"message":"255","line":14,"column":3,"nodeType":"245","messageId":"246","endLine":14,"endColumn":12},{"ruleId":"243","severity":1,"message":"256","line":18,"column":3,"nodeType":"245","messageId":"246","endLine":18,"endColumn":11},{"ruleId":"243","severity":1,"message":"257","line":19,"column":3,"nodeType":"245","messageId":"246","endLine":19,"endColumn":6},{"ruleId":"243","severity":1,"message":"258","line":20,"column":3,"nodeType":"245","messageId":"246","endLine":20,"endColumn":7},{"ruleId":"243","severity":1,"message":"259","line":38,"column":7,"nodeType":"245","messageId":"246","endLine":38,"endColumn":19},{"ruleId":"243","severity":1,"message":"260","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":25},{"ruleId":"243","severity":1,"message":"261","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":15},{"ruleId":"243","severity":1,"message":"253","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":18},{"ruleId":"243","severity":1,"message":"262","line":19,"column":8,"nodeType":"245","messageId":"246","endLine":19,"endColumn":20},{"ruleId":"243","severity":1,"message":"263","line":22,"column":7,"nodeType":"245","messageId":"246","endLine":22,"endColumn":16},{"ruleId":"243","severity":1,"message":"264","line":36,"column":8,"nodeType":"245","messageId":"246","endLine":36,"endColumn":29},{"ruleId":"243","severity":1,"message":"265","line":36,"column":31,"nodeType":"245","messageId":"246","endLine":36,"endColumn":54},{"ruleId":"243","severity":1,"message":"266","line":37,"column":8,"nodeType":"245","messageId":"246","endLine":37,"endColumn":20},{"ruleId":"243","severity":1,"message":"267","line":37,"column":22,"nodeType":"245","messageId":"246","endLine":37,"endColumn":37},{"ruleId":"243","severity":1,"message":"268","line":4,"column":11,"nodeType":"245","messageId":"246","endLine":4,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":34,"column":33,"nodeType":"271","messageId":"272","endLine":34,"endColumn":35},{"ruleId":"243","severity":1,"message":"248","line":10,"column":3,"nodeType":"245","messageId":"246","endLine":10,"endColumn":7},{"ruleId":"243","severity":1,"message":"273","line":27,"column":29,"nodeType":"245","messageId":"246","endLine":27,"endColumn":35},{"ruleId":"243","severity":1,"message":"274","line":39,"column":7,"nodeType":"245","messageId":"246","endLine":39,"endColumn":14},{"ruleId":"243","severity":1,"message":"275","line":12,"column":8,"nodeType":"245","messageId":"246","endLine":12,"endColumn":12},{"ruleId":"243","severity":1,"message":"276","line":23,"column":9,"nodeType":"245","messageId":"246","endLine":23,"endColumn":16},{"ruleId":"277","severity":1,"message":"278","line":37,"column":36,"nodeType":"279","messageId":"280","endLine":37,"endColumn":38},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'classnames' is defined but never used.","'google' is defined but never used.","'AreaChart' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'PieChartData' is assigned a value but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Notification' is defined but never used.","'positions' is assigned a value but never used.","'notificationsPosition' is assigned a value but never used.","'setNotificationPosition' is assigned a value but never used.","'errorToastId' is assigned a value but never used.","'setErrorToastId' is assigned a value but never used.","'HomeIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'account' is assigned a value but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]