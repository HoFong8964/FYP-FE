[{"/Users/tszhofong/project/FYP-FE/src/index.js":"1","/Users/tszhofong/project/FYP-FE/src/serviceWorker.js":"2","/Users/tszhofong/project/FYP-FE/src/context/UserContext.js":"3","/Users/tszhofong/project/FYP-FE/src/context/LayoutContext.js":"4","/Users/tszhofong/project/FYP-FE/src/components/App.js":"5","/Users/tszhofong/project/FYP-FE/src/themes/index.js":"6","/Users/tszhofong/project/FYP-FE/src/components/Layout/Layout.js":"7","/Users/tszhofong/project/FYP-FE/src/pages/error/Error.js":"8","/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js":"9","/Users/tszhofong/project/FYP-FE/src/themes/default.js":"10","/Users/tszhofong/project/FYP-FE/src/pages/charts/Charts.js":"11","/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexHeatmap.js":"12","/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexLineChart.js":"13","/Users/tszhofong/project/FYP-FE/src/components/PageTitle/PageTitle.js":"14","/Users/tszhofong/project/FYP-FE/src/components/Widget/Widget.js":"15","/Users/tszhofong/project/FYP-FE/src/components/Widget/styles.js":"16","/Users/tszhofong/project/FYP-FE/src/components/PageTitle/styles.js":"17","/Users/tszhofong/project/FYP-FE/src/components/Wrappers/Wrappers.js":"18","/Users/tszhofong/project/FYP-FE/src/pages/error/styles.js":"19","/Users/tszhofong/project/FYP-FE/src/pages/login/styles.js":"20","/Users/tszhofong/project/FYP-FE/src/components/Layout/styles.js":"21","/Users/tszhofong/project/FYP-FE/src/pages/maps/Maps.js":"22","/Users/tszhofong/project/FYP-FE/src/pages/tables/Tables.js":"23","/Users/tszhofong/project/FYP-FE/src/pages/notifications/Notifications.js":"24","/Users/tszhofong/project/FYP-FE/src/pages/typography/Typography.js":"25","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/Dashboard.js":"26","/Users/tszhofong/project/FYP-FE/src/pages/book/Book.js":"27","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/Sidebar.js":"28","/Users/tszhofong/project/FYP-FE/src/components/Header/Header.js":"29","/Users/tszhofong/project/FYP-FE/src/pages/icons/Icons.js":"30","/Users/tszhofong/project/FYP-FE/src/pages/book/styles.js":"31","/Users/tszhofong/project/FYP-FE/src/components/Header/styles.js":"32","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/styles.js":"33","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/Dot.js":"34","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"35","/Users/tszhofong/project/FYP-FE/src/components/Notification/Notification.js":"36","/Users/tszhofong/project/FYP-FE/src/pages/icons/styles.js":"37","/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/UserAvatar.js":"38","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/mock.js":"39","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/styles.js":"40","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/BigStat.js":"41","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/Table/Table.js":"42","/Users/tszhofong/project/FYP-FE/src/pages/typography/styles.js":"43","/Users/tszhofong/project/FYP-FE/src/pages/notifications/styles.js":"44","/Users/tszhofong/project/FYP-FE/src/pages/maps/styles.js":"45","/Users/tszhofong/project/FYP-FE/src/components/Notification/styles.js":"46","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/styles.js":"47","/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/styles.js":"48","/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/styles.js":"49","/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js":"50","/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js":"51","/Users/tszhofong/project/FYP-FE/src/pages/personal/styles.js":"52"},{"size":869,"mtime":1650702581523,"results":"53","hashOfConfig":"54"},{"size":4948,"mtime":1650646315244,"results":"55","hashOfConfig":"54"},{"size":3624,"mtime":1651508541337,"results":"56","hashOfConfig":"54"},{"size":1392,"mtime":1650646315240,"results":"57","hashOfConfig":"54"},{"size":1711,"mtime":1650646315238,"results":"58","hashOfConfig":"54"},{"size":502,"mtime":1650646315244,"results":"59","hashOfConfig":"54"},{"size":2392,"mtime":1651325205161,"results":"60","hashOfConfig":"54"},{"size":1571,"mtime":1650646315242,"results":"61","hashOfConfig":"54"},{"size":6140,"mtime":1651509873050,"results":"62","hashOfConfig":"54"},{"size":2987,"mtime":1650646315244,"results":"63","hashOfConfig":"54"},{"size":5556,"mtime":1650646315241,"results":"64","hashOfConfig":"54"},{"size":1794,"mtime":1650646315241,"results":"65","hashOfConfig":"54"},{"size":1328,"mtime":1650646315241,"results":"66","hashOfConfig":"54"},{"size":427,"mtime":1650646315239,"results":"67","hashOfConfig":"54"},{"size":2485,"mtime":1650646315240,"results":"68","hashOfConfig":"54"},{"size":969,"mtime":1650646315240,"results":"69","hashOfConfig":"54"},{"size":462,"mtime":1650646315239,"results":"70","hashOfConfig":"54"},{"size":3790,"mtime":1650646315240,"results":"71","hashOfConfig":"54"},{"size":1334,"mtime":1650646315242,"results":"72","hashOfConfig":"54"},{"size":3133,"mtime":1650646315243,"results":"73","hashOfConfig":"54"},{"size":680,"mtime":1650646315239,"results":"74","hashOfConfig":"54"},{"size":971,"mtime":1650646315243,"results":"75","hashOfConfig":"54"},{"size":2082,"mtime":1650646315243,"results":"76","hashOfConfig":"54"},{"size":13470,"mtime":1650646315243,"results":"77","hashOfConfig":"54"},{"size":4506,"mtime":1650646315243,"results":"78","hashOfConfig":"54"},{"size":10929,"mtime":1650647830927,"results":"79","hashOfConfig":"54"},{"size":7792,"mtime":1651335336916,"results":"80","hashOfConfig":"54"},{"size":4086,"mtime":1651325611140,"results":"81","hashOfConfig":"54"},{"size":9760,"mtime":1650779019051,"results":"82","hashOfConfig":"54"},{"size":377833,"mtime":1650646315242,"results":"83","hashOfConfig":"54"},{"size":426,"mtime":1651334303664,"results":"84","hashOfConfig":"54"},{"size":3868,"mtime":1650646315239,"results":"85","hashOfConfig":"54"},{"size":1304,"mtime":1650646315240,"results":"86","hashOfConfig":"54"},{"size":862,"mtime":1650646315240,"results":"87","hashOfConfig":"54"},{"size":4411,"mtime":1650646315240,"results":"88","hashOfConfig":"54"},{"size":3296,"mtime":1650646315239,"results":"89","hashOfConfig":"54"},{"size":780,"mtime":1650646315242,"results":"90","hashOfConfig":"54"},{"size":593,"mtime":1650646315240,"results":"91","hashOfConfig":"54"},{"size":4105,"mtime":1650646315241,"results":"92","hashOfConfig":"54"},{"size":2870,"mtime":1650646315241,"results":"93","hashOfConfig":"54"},{"size":4039,"mtime":1650646315241,"results":"94","hashOfConfig":"54"},{"size":1274,"mtime":1650646315241,"results":"95","hashOfConfig":"54"},{"size":374,"mtime":1650646315244,"results":"96","hashOfConfig":"54"},{"size":1858,"mtime":1650646315243,"results":"97","hashOfConfig":"54"},{"size":171,"mtime":1650646315243,"results":"98","hashOfConfig":"54"},{"size":993,"mtime":1650646315239,"results":"99","hashOfConfig":"54"},{"size":1412,"mtime":1650646315240,"results":"100","hashOfConfig":"54"},{"size":276,"mtime":1650646315240,"results":"101","hashOfConfig":"54"},{"size":1027,"mtime":1650646315241,"results":"102","hashOfConfig":"54"},{"size":5288,"mtime":1651509751785,"results":"103","hashOfConfig":"54"},{"size":2835,"mtime":1651509838037,"results":"104","hashOfConfig":"54"},{"size":317,"mtime":1651331766913,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"3zwx7j",{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tszhofong/project/FYP-FE/src/index.js",[],["219","220"],"/Users/tszhofong/project/FYP-FE/src/serviceWorker.js",[],"/Users/tszhofong/project/FYP-FE/src/context/UserContext.js",[],"/Users/tszhofong/project/FYP-FE/src/context/LayoutContext.js",[],"/Users/tszhofong/project/FYP-FE/src/components/App.js",[],"/Users/tszhofong/project/FYP-FE/src/themes/index.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Layout/Layout.js",["221","222","223","224","225","226","227"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport {Box, IconButton, Link} from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Personal from \"../../pages/personal\";\nimport Book from \"../../pages/book\";\nimport Appointment from \"../../pages/appointment\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <Route path=\"/app/personal\" component={Personal} />\n              <Route path=\"/app/book\" component={Book} />\n              <Route path=\"/app/appointment\" component={Appointment} />\n              <Route path=\"/app/dashboard\" component={Dashboard} />\n              <Route path=\"/app/typography\" component={Typography} />\n              <Route path=\"/app/tables\" component={Tables} />\n              <Route path=\"/app/notifications\" component={Notifications} />\n              <Route\n                exact\n                path=\"/app/ui\"\n                render={() => <Redirect to=\"/app/ui/icons\" />}\n              />\n              <Route path=\"/app/ui/maps\" component={Maps} />\n              <Route path=\"/app/ui/icons\" component={Icons} />\n              <Route path=\"/app/ui/charts\" component={Charts} />\n            </Switch>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/tszhofong/project/FYP-FE/src/pages/error/Error.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/login/Login.js",["228","229"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  CircularProgress,\n  Typography,\n  Button,\n  Tabs,\n  Tab,\n  TextField,\n  Fade,\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// logo\nimport logo from \"./logo.svg\";\nimport google from \"../../images/google.svg\";\n\n// context\nimport { useUserDispatch, loginUser, loginPhyUser } from \"../../context/UserContext\";\n\nfunction Login(props) {\n  var classes = useStyles();\n\n  // global\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [isLoading, setIsLoading] = useState(false);\n  var [error, setError] = useState(null);\n  var [activeTabId, setActiveTabId] = useState(0);\n  var [loginValue, setLoginValue] = useState(\"\");\n  var [passwordValue, setPasswordValue] = useState(\"\");\n  var [phyLoginValue, setPhyLoginValue] = useState(\"\");\n  var [phyPasswordValue, setPhyPasswordValue] = useState(\"\");\n\n  return (\n    <Grid container className={classes.container}>\n      <div className={classes.logotypeContainer}>\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\n        <Typography className={classes.logotypeText}>電子健康資訊系統</Typography>\n      </div>\n      <div className={classes.formContainer}>\n        <div className={classes.form}>\n          <Tabs\n            value={activeTabId}\n            onChange={(e, id) => setActiveTabId(id)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"一般用戶\" classes={{ root: classes.tab }} />\n            <Tab label=\"醫療用戶\" classes={{ root: classes.tab }} />\n          </Tabs>\n          {activeTabId === 0 && (\n            <React.Fragment>\n              <Fade in={error}>\n                <Typography color=\"secondary\" className={classes.errorMessage}>\n                  你輸入的帳號或密碼不正確\n                </Typography>\n              </Fade>\n              <TextField\n                id=\"login\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={loginValue}\n                onChange={e => setLoginValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"帳號\"\n                type=\"text\"\n                fullWidth\n              />\n              <TextField\n                id=\"password\"\n                InputProps={{\n                  classes: {\n                    underline: classes.textFieldUnderline,\n                    input: classes.textField,\n                  },\n                }}\n                value={passwordValue}\n                onChange={e => setPasswordValue(e.target.value)}\n                margin=\"normal\"\n                placeholder=\"密碼\"\n                type=\"password\"\n                fullWidth\n              />\n              <div className={classes.formButtons}>\n                {isLoading ? (\n                  <CircularProgress size={26} className={classes.loginLoader} />\n                ) : (\n                  <Button\n                    disabled={\n                      loginValue.length === 0 || passwordValue.length === 0\n                    }\n                    onClick={() =>\n                      loginUser(\n                        userDispatch,\n                        loginValue,\n                        passwordValue,\n                        props.history,\n                        setIsLoading,\n                        setError,\n                      )\n                    }\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                  >\n                    登入\n                  </Button>\n                )}\n              </div>\n            </React.Fragment>\n          )}\n          {activeTabId === 1 && (\n            <React.Fragment>\n            <Fade in={error}>\n              <Typography color=\"secondary\" className={classes.errorMessage}>\n                你輸入的帳號或密碼不正確\n              </Typography>\n            </Fade>\n            <TextField\n              id=\"login\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyLoginValue}\n              onChange={e => setPhyLoginValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"帳號\"\n              type=\"text\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              InputProps={{\n                classes: {\n                  underline: classes.textFieldUnderline,\n                  input: classes.textField,\n                },\n              }}\n              value={phyPasswordValue}\n              onChange={e => setPhyPasswordValue(e.target.value)}\n              margin=\"normal\"\n              placeholder=\"密碼\"\n              type=\"password\"\n              fullWidth\n            />\n            <div className={classes.formButtons}>\n              {isLoading ? (\n                <CircularProgress size={26} className={classes.loginLoader} />\n              ) : (\n                <Button\n                  disabled={\n                    loginValue.length === 0 || passwordValue.length === 0\n                  }\n                  onClick={() =>\n                    loginPhyUser(\n                      userDispatch,\n                      phyLoginValue,\n                      phyPasswordValue,\n                      props.history,\n                      setIsLoading,\n                      setError,\n                    )\n                  }\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  登入\n                </Button>\n              )}\n            </div>\n          </React.Fragment>\n          )}\n        </div>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);\n","/Users/tszhofong/project/FYP-FE/src/themes/default.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/Charts.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexHeatmap.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/charts/components/ApexLineChart.js",[],"/Users/tszhofong/project/FYP-FE/src/components/PageTitle/PageTitle.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Widget/Widget.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Widget/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/PageTitle/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Wrappers/Wrappers.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/error/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/login/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Layout/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/maps/Maps.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/tables/Tables.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/notifications/Notifications.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/typography/Typography.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/Dashboard.js",["230","231","232","233","234"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>} />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Visits Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12, 678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Registrations\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Sign Out\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"App Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Integration\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  SDK\n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Integration\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                SDK\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        <Grid item xs={12}>\n          <Widget\n            title=\"Support Requests\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/book/Book.js",["235","236","237","238","239"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, TextField, Select, MenuItem, Box, Button, FormControl, InputLabel, Checkbox} from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\nimport DatePicker from \"react-date-picker\";\nimport \"react-datetime/css/react-datetime.css\";\n\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\n\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [phyList, setPhyList] = useState(undefined);\n  var [phyId, setPhyId] = useState('');\n  var [bookDate, setBookDate] = useState(new Date());\n  var [hour, setHour] = useState('');\n  var [minute, setMinute] = useState('');\n  var [remarks, setRemarks] = useState('');\n  var [agreement ,setAgreement] = useState(false);\n  \n\n  var hours = ['10','11','12','13','14','15','16','17','18']\n  var minutes = ['00','30']\n\n\n  var nextDay = new Date();\n  nextDay.setDate(nextDay.getDate() + 1);\n\n  useEffect(() => {\n    // get phy data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch('http://localhost:3001/physiotherapists', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setPhyList(data.res);\n      });\n  }, []);\n  \n\n  return (\n    <>\n      <PageTitle title=\"預約診症\" />\n      <Grid container spacing={4}>\n        <ToastContainer\n          className={classes.toastsContainer}\n          closeButton={\n            <CloseButton className={classes.notificationCloseButton} />\n          }\n          closeOnClick={false}\n          progressClassName={classes.notificationProgress}\n        />\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <div className={classes.formContainer}>\n            <div className={classes.form}>\n              <div>\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"姓名\"\n                  value={localStorage.getItem('displayName')}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  variant=\"filled\"\n                />\n              </div>\n              <div>&nbsp;</div>\n              <div>\n                <Box sx={{ minWidth: 120 }}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">物理治療師</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={phyId}\n                      label=\"PhyId\"\n                      onChange={e => {setPhyId(e.target.value)}}\n                    >\n                      {phyList?.length > 0 ? phyList?.map((value,index)=>{\n                        return <MenuItem value={value.id}>{value.center} - {value.displayName}</MenuItem>\n                      }) : ''}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </div>\n              <div>&nbsp;</div>\n              <div>&nbsp;</div>\n              <div>\n                <DatePicker\n                  value={bookDate}\n                  onChange={(date) => {setBookDate(date)}}\n                  minDate={nextDay}\n                \n                />\n              </div>\n              <div>&nbsp;</div>\n              <div>\n                <Box sx={{ minWidth: 160 }}>\n                  <FormControl>\n                    <InputLabel id=\"demo-simple-select-label\">時</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={hour}\n                      label=\"Hours\"\n                      onChange={e => {setHour(e.target.value)}}\n                    >\n                      {hours.map((value,index)=>{\n                        return <MenuItem value={value}>{value}</MenuItem>\n                      })}\n                    </Select>\n                  </FormControl>\n                  <FormControl>\n                    <InputLabel id=\"demo-simple-select-label\">分</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={minute}\n                      label=\"Minutes\"\n                      onChange={e => {setMinute(e.target.value)}}\n                    >\n                      {minutes.map((value,index)=>{\n                        return <MenuItem value={value}>{value}</MenuItem>\n                      })}\n                    </Select>\n                  </FormControl>\n                </Box>\n              </div>\n              <div>&nbsp;</div>\n              <div>\n                <TextField\n                  id=\"outlined-name\"\n                  label=\"備註\"\n                  value={remarks}\n                  onChange={e => {setRemarks(e.target.value)}}\n                  multiline\n                  maxRows={4}\n                />\n              </div>\n              <div>&nbsp;</div>\n              <div>&nbsp;</div>\n              <div>\n                <Checkbox\n                  className={classes.checkbox}\n                  checked={agreement}\n                  onChange={e => {setAgreement(e.target.checked)}}\n                />\n                我同意相關機構取閱我的電子健康紀錄\n              </div>\n              <div>&nbsp;</div>\n              <div>&nbsp;</div>\n              <div className={classes.formButtons}>\n                <Button\n                  onClick={() =>\n                    confirmBook()\n                  }\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                >\n                  確定\n                </Button>\n              </div>\n            </div>\n          </div>\n          </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n  function confirmBook() {\n    var appointmentDate = bookDate.getFullYear() + \"-\" + ((bookDate.getMonth()+1)<10 ? '0' : '') + (bookDate.getMonth()+1) + \"-\" + (bookDate.getDate() < 10 ? '0' : '') + bookDate.getDate();\n    var appointmentTime = hour + \":\" + minute;\n    if(!agreement){\n      alert('請同意相關機構取閱你的電子健康紀錄');\n      return false;\n    }\n    if(phyId && appointmentDate && appointmentTime){\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          patientId: localStorage.getItem('id'),\n          phyId: phyId,\n          appointmentDate: appointmentDate,\n          appointmentTime: appointmentTime,\n          remarks: remarks,\n         })\n      };\n      fetch('http://localhost:3001/makeAppointment', requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          if(data.status === 200){\n            window.location.href = '/#/app/appointment';\n          }\n        });\n    }\n\n    \n  }\n\n}\n\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/Users/tszhofong/project/FYP-FE/src/components/Sidebar/Sidebar.js",["240","241","242","243","244","245"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  Person as PersonIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n  DateRange as DateRangeIcon,\n  AccessAlarms as AccessAlarmsIcon\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nif(localStorage.getItem('type') === 'physiotherapists'){\n  var structure = [\n    { id: 0, label: \"預約診症\", link: \"/app/book\", icon: <DateRangeIcon /> },\n    { id: 1, label: \"預約記錄\", link: \"/app/appointment\", icon: <AccessAlarmsIcon /> },\n  ];\n}\nelse{\n  var structure = [\n    { id: 0, label: \"個人資料\", link: \"/app/personal\", icon: <PersonIcon /> },\n    { id: 1, label: \"預約診症\", link: \"/app/book\", icon: <DateRangeIcon /> },\n    { id: 2, label: \"預約記錄\", link: \"/app/appointment\", icon: <AccessAlarmsIcon /> },\n    {\n      id: 1,\n      label: \"Typography\",\n      link: \"/app/typography\",\n      icon: <TypographyIcon />,\n    },\n    { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\n    {\n      id: 3,\n      label: \"Notifications\",\n      link: \"/app/notifications\",\n      icon: <NotificationsIcon />,\n    },\n    {\n      id: 4,\n      label: \"UI Elements\",\n      link: \"/app/ui\",\n      icon: <UIElementsIcon />,\n      children: [\n        { label: \"Icons\", link: \"/app/ui/icons\" },\n        { label: \"Charts\", link: \"/app/ui/charts\" },\n        { label: \"Maps\", link: \"/app/ui/maps\" },\n      ],\n    },\n  ];\n}\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/Users/tszhofong/project/FYP-FE/src/components/Header/Header.js",["246","247","248"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst account = localStorage.getItem(\"account\");\nconst displayName = localStorage.getItem(\"displayName\");\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n        電子健康資訊系統\n        </Typography>\n        <div className={classes.grow} /><div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setNotificationsMenu(e.currentTarget);\n            setIsNotificationsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isNotificationsUnread ? notifications.length : null}\n            color=\"warning\"\n          >\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          aria-haspopup=\"true\"\n          aria-controls=\"mail-menu\"\n          onClick={e => {\n            setMailMenu(e.currentTarget);\n            setIsMailsUnread(false);\n          }}\n          className={classes.headerMenuButton}\n        >\n          <Badge\n            badgeContent={isMailsUnread ? messages.length : null}\n            color=\"secondary\"\n          >\n            <MailIcon classes={{ root: classes.headerIcon }} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              {displayName}\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/icons/Icons.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/book/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Header/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/Dot.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Notification/Notification.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/icons/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/UserAvatar.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/mock.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/Table/Table.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/typography/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/notifications/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/maps/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Notification/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/components/UserAvatar/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/tszhofong/project/FYP-FE/src/pages/appointment/Appointment.js",["249","250","251","252","253","254"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\n\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\n\nexport default function Appointment() {\n  const classes = useStyles();\n  const [featureAppointmentList, setFeatureAppointmentList] = useState([]);\n  const [pastAppointmentList, setPastAppointmentList] = useState([]);\n  const [activeTabId, setActiveTabId] = useState(0);\n  var isPhysiotherapists = false;\n  if(localStorage.getItem(\"type\") === 'physiotherapists'){\n    isPhysiotherapists = true;\n  }\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    var query = '';\n    var columns;\n    if(!isPhysiotherapists){\n      query = '?patientId='+localStorage.getItem('id');\n      columns = [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"];\n    }\n    else{\n      query = '?phyId='+localStorage.getItem('id');\n      columns = [\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"];\n    }\n\n    fetch('http://localhost:3001/getFeatureAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"data: \", data);\n        let featureAppointmentList = [];\n        data?.res?.map((appointment) => {\n          if(isPhysiotherapists){\n            featureAppointmentList.push([\n              appointment.appointmentDate,\n              appointment.appointmentTime,\n              appointment.patientDetails[0].idNum,\n              appointment.patientDetails[0].displayName,\n              appointment.patientDetails[0].dob,\n              appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n              appointment.remarks,\n            ]);\n          }\n          else{\n            featureAppointmentList.push([\n              appointment.appointmentDate,\n              appointment.appointmentTime,\n              appointment.physiotherapistsDetails[0].center,\n              appointment.physiotherapistsDetails[0].displayName,\n              appointment.remarks,\n            ]);\n          }\n          \n        });\n        setFeatureAppointmentList(featureAppointmentList);\n      });\n\n      fetch('http://localhost:3001/getPastAppointmentList'+query, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        let pastAppointmentList = [];\n        data?.res?.map((appointment) => {\n          if(isPhysiotherapists){\n            featureAppointmentList.push([\n              appointment.appointmentDate,\n              appointment.appointmentTime,\n              appointment.patientDetails[0].idNum,\n              appointment.patientDetails[0].displayName,\n              appointment.patientDetails[0].dob,\n              appointment.patientDetails[0].sex == 'Male' ? \"男性\" : \"女性\",\n              appointment.remarks,\n            ]);\n          }\n          else{\n            featureAppointmentList.push([\n              appointment.appointmentDate,\n              appointment.appointmentTime,\n              appointment.physiotherapistsDetails[0].center,\n              appointment.physiotherapistsDetails[0].displayName,\n              appointment.remarks,\n            ]);\n          }\n        });\n        setPastAppointmentList(pastAppointmentList);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"預約記錄\" />\n      <Paper className={classes.iconsContainer}>\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        value={activeTabId}\n        onChange={(e, id) => setActiveTabId(id)}\n        className={classes.iconsBar}\n      >\n        <Tab label={isPhysiotherapists ? \"預約列表\" : \"我的預約\"} classes={{ root: classes.tab }} />\n        <Tab label=\"過去預約\" classes={{ root: classes.tab }} />\n      </Tabs>\n      {activeTabId === 0 && (\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              data={featureAppointmentList}\n              columns={\n                !isPhysiotherapists ? \n                [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"]\n                :\n                [\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"]\n              }\n              options={{\n                filterType: \"checkbox\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n      {activeTabId === 1 && (\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            <MUIDataTable\n              data={pastAppointmentList}\n              columns={\n                !isPhysiotherapists ? \n                [\"日期\", \"時間\", \"診所\", \"物理治療師\", \"備註\"]\n                :\n                [\"日期\", \"時間\", \"身分證號碼\", \"患者姓名\", \"出生日期\", \"性別\", \"備註\"]\n              }\n              options={{\n                filterType: \"checkbox\",\n              }}\n            />\n          </Grid>\n        </Grid>\n      )}\n      </Paper>\n    </>\n  );\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/personal/Personal.js",["255"],"import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget/Widget\";\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\n\nexport default function PersonalPage() {\n  var classes = useStyles();\n  const [infomation, setInfomation] = useState([]);\n\n  useEffect(() => {\n    // get appointment data\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n    };\n\n    fetch('http://localhost:3001/getPatient?patientId='+localStorage.getItem('id'), requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        setInfomation(data.res[0]);\n      });\n\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"個人資料\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"個人資料\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                姓名 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.displayName}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                身分證號碼 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.idNum}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                性別 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.sex == 'Male' ? \"男性\" : \"女性\"}\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" className={classes.text}>\n                出生日期 :\n              </Typography>\n              <Typography className={classes.text}>\n                {infomation.dob}\n              </Typography>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"病歷記錄\" disableWidgetMenu>\n            <div className={classes.dashedBorder}>\n              {infomation.medicalHistoryList?.map(record => (\n                <React.Fragment>\n                  <Typography variant=\"h5\" color=\"secondary\" className={classes.text}>\n                    {record.date}\n                  </Typography>\n                  <Typography className={classes.text}>\n                    {record.description}\n                  </Typography>\n                </React.Fragment>\n              ))}\n            </div>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","/Users/tszhofong/project/FYP-FE/src/pages/personal/styles.js",[],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":9,"column":9,"nodeType":"262","messageId":"263","endLine":9,"endColumn":12},{"ruleId":"260","severity":1,"message":"264","line":9,"column":14,"nodeType":"262","messageId":"263","endLine":9,"endColumn":24},{"ruleId":"260","severity":1,"message":"265","line":9,"column":26,"nodeType":"262","messageId":"263","endLine":9,"endColumn":30},{"ruleId":"260","severity":1,"message":"266","line":10,"column":8,"nodeType":"262","messageId":"263","endLine":10,"endColumn":12},{"ruleId":"260","severity":1,"message":"267","line":14,"column":18,"nodeType":"262","messageId":"263","endLine":14,"endColumn":30},{"ruleId":"260","severity":1,"message":"268","line":15,"column":17,"nodeType":"262","messageId":"263","endLine":15,"endColumn":28},{"ruleId":"260","severity":1,"message":"269","line":16,"column":16,"nodeType":"262","messageId":"263","endLine":16,"endColumn":26},{"ruleId":"260","severity":1,"message":"270","line":13,"column":8,"nodeType":"262","messageId":"263","endLine":13,"endColumn":18},{"ruleId":"260","severity":1,"message":"271","line":20,"column":8,"nodeType":"262","messageId":"263","endLine":20,"endColumn":14},{"ruleId":"260","severity":1,"message":"272","line":14,"column":3,"nodeType":"262","messageId":"263","endLine":14,"endColumn":12},{"ruleId":"260","severity":1,"message":"273","line":18,"column":3,"nodeType":"262","messageId":"263","endLine":18,"endColumn":11},{"ruleId":"260","severity":1,"message":"274","line":19,"column":3,"nodeType":"262","messageId":"263","endLine":19,"endColumn":6},{"ruleId":"260","severity":1,"message":"275","line":20,"column":3,"nodeType":"262","messageId":"263","endLine":20,"endColumn":7},{"ruleId":"260","severity":1,"message":"276","line":38,"column":7,"nodeType":"262","messageId":"263","endLine":38,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":25},{"ruleId":"260","severity":1,"message":"278","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":15},{"ruleId":"260","severity":1,"message":"270","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":18},{"ruleId":"260","severity":1,"message":"279","line":19,"column":8,"nodeType":"262","messageId":"263","endLine":19,"endColumn":20},{"ruleId":"260","severity":1,"message":"280","line":22,"column":7,"nodeType":"262","messageId":"263","endLine":22,"endColumn":16},{"ruleId":"260","severity":1,"message":"281","line":4,"column":11,"nodeType":"262","messageId":"263","endLine":4,"endColumn":19},{"ruleId":"260","severity":1,"message":"282","line":10,"column":21,"nodeType":"262","messageId":"263","endLine":10,"endColumn":32},{"ruleId":"260","severity":1,"message":"283","line":11,"column":19,"nodeType":"262","messageId":"263","endLine":11,"endColumn":30},{"ruleId":"260","severity":1,"message":"284","line":12,"column":18,"nodeType":"262","messageId":"263","endLine":12,"endColumn":25},{"ruleId":"260","severity":1,"message":"285","line":26,"column":8,"nodeType":"262","messageId":"263","endLine":26,"endColumn":11},{"ruleId":"286","severity":1,"message":"287","line":42,"column":7,"nodeType":"262","messageId":"288","endLine":42,"endColumn":16},{"ruleId":"260","severity":1,"message":"265","line":10,"column":3,"nodeType":"262","messageId":"263","endLine":10,"endColumn":7},{"ruleId":"260","severity":1,"message":"289","line":27,"column":29,"nodeType":"262","messageId":"263","endLine":27,"endColumn":35},{"ruleId":"260","severity":1,"message":"290","line":39,"column":7,"nodeType":"262","messageId":"263","endLine":39,"endColumn":14},{"ruleId":"260","severity":1,"message":"291","line":45,"column":7,"nodeType":"262","messageId":"263","endLine":45,"endColumn":14},{"ruleId":"292","severity":1,"message":"293","line":53,"column":38,"nodeType":"294","messageId":"295","endLine":53,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":61,"column":49,"nodeType":"298","messageId":"299","endLine":61,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":83,"column":38,"nodeType":"294","messageId":"295","endLine":83,"endColumn":40},{"ruleId":"296","severity":1,"message":"297","line":91,"column":49,"nodeType":"298","messageId":"299","endLine":91,"endColumn":51},{"ruleId":"300","severity":1,"message":"301","line":108,"column":6,"nodeType":"302","endLine":108,"endColumn":8,"suggestions":"303"},{"ruleId":"296","severity":1,"message":"297","line":54,"column":33,"nodeType":"298","messageId":"299","endLine":54,"endColumn":35},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'classnames' is defined but never used.","'google' is defined but never used.","'AreaChart' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'PieChartData' is assigned a value but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Notification' is defined but never used.","'positions' is assigned a value but never used.","'HomeIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","no-redeclare","'structure' is already defined.","redeclared","'Button' is defined but never used.","'account' is assigned a value but never used.","'columns' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'featureAppointmentList' and 'isPhysiotherapists'. Either include them or remove the dependency array.","ArrayExpression",["306"],"no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},"Update the dependencies array to be: [featureAppointmentList, isPhysiotherapists]",{"range":"309","text":"310"},[3500,3502],"[featureAppointmentList, isPhysiotherapists]"]